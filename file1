import pygame
import random

pygame.init()

# set up game window
window_width = 500
window_height = 500
window = pygame.display.set_mode((window_width, window_height))
pygame.display.set_caption("Snake Game")

# define colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)
green = (0, 255, 0)

# set up game variables
block_size = 10
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 25)

def message_to_screen(msg, color):
    screen_text = font.render(msg, True, color)
    window.blit(screen_text, [window_width/6, window_height/3])

def game_loop():
    game_over = False
    game_close = False

    x1 = window_width/2
    y1 = window_height/2

    x1_change = 0
    y1_change = 0

    # set up initial snake and food positions
    snake_list = []
    length_of_snake = 1

    foodx = round(random.randrange(0, window_width - block_size) / 10.0) * 10.0
    foody = round(random.randrange(0, window_height - block_size) / 10.0) * 10.0

    # main game loop
    while not game_over:

        while game_close == True:
            window.fill(white)
            message_to_screen("You Lost! Press Q-Quit or C-Play Again", red)
            pygame.display.update()

            # check for user input to play again or quit
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        game_loop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -block_size
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = block_size
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -block_size
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = block_size
                    x1_change = 0

        # check for collision with walls or snake body
        if x1 >= window_width or x1 < 0 or y1 >= window_height or y1 < 0:
            game_close = True
        x1 += x1_change
        y1 += y1_change
        window.fill(white)
        pygame.draw.rect(window, green, [foodx, foody, block_size, block_size])

        # update snake and check for collision with food
        snake_head = []
        snake_head.append(x1)
        snake_head.append(y1)
        snake_list.append(snake_head)

        if len(snake_list) > length_of_snake:
            del snake_list[0]

        for segment in snake_list[:-1]:
            if segment == snake_head:
                game_close = True

        # draw snake on screen
        for segment in snake_list:
            pygame.draw.rect(window, black, [segment[0], segment[1], block_size, block_size])

       

